<pre>version 001</pre>

{%- liquid
  
  assign gallery_images = blank
  if page.metafields.ethossence.gallery_img != blank
    assign gallery_images = page.metafields.ethossence.gallery_img.value
  endif
  
  assign columns_desktop = section.settings.columns_desktop | default: 3
  assign columns_mobile = section.settings.columns_mobile | default: 2

  assign has_images = false
  for image in gallery_images
    if image != blank
      assign has_images = true
    endif
  endfor

-%}

{%- unless gallery_images == blank -%}

  {%- style -%}
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }

    .image-gallery-{{ section.id }} {
      --columns-desktop: {{ columns_desktop }};
      --columns-mobile: {{ columns_mobile }};
    }
  {%- endstyle -%}

  <div class="color-{{ section.settings.color_scheme }} gradient">
    <div class="image-gallery-section section-{{ section.id }}-padding">
      <div class="page-width">
        {%- if section.settings.title != blank -%}
          <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin">
            <h2 class="title inline-richtext {{ section.settings.heading_size }}">
              {{ section.settings.title }}
            </h2>
          </div>
        {%- endif -%}
        {%- if has_images -%}
          <div class="image-gallery image-gallery-{{ section.id }}">
            {%- for image in gallery_images -%}
              <div class="image-gallery__item">
                <button 
                  type="button" 
                  class="image-gallery__button"
                  data-lightbox-trigger
                  data-image-src="{{ image | image_url: width: 1200 }}"
                  data-image-alt="{{ image.alt | escape }}"
                  aria-label="View larger image {{ forloop.index }}"
                >
                  {{ image | image_url: width: 400 | image_tag: 
                    loading: 'lazy',
                    class: 'image-gallery__image',
                    alt: image.alt
                  }}
                  <span class="image-gallery__overlay">
                    <svg class="image-gallery__zoom-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <circle cx="11" cy="11" r="8"/>
                      <path d="m21 21-4.35-4.35"/>
                      <line x1="11" y1="8" x2="11" y2="14"/>
                      <line x1="8" y1="11" x2="14" y2="11"/>
                    </svg>
                  </span>
                </button>
              </div>
            {%- endfor -%}
          </div>
        {%- else -%}
          <div class="image-gallery__empty">
            <p>No images found in gallery.</p>
          </div>
        {%- endif -%}
      </div>
    </div>
  </div>

  <!-- Lightbox Modal -->
  <div class="image-lightbox" id="image-lightbox-{{ section.id }}" aria-hidden="true">
    <div class="image-lightbox__backdrop" data-lightbox-close></div>
    <div class="image-lightbox__container">
      <button 
        type="button" 
        class="image-lightbox__close" 
        data-lightbox-close
        aria-label="Close lightbox"
      >
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"/>
          <line x1="6" y1="6" x2="18" y2="18"/>
        </svg>
      </button>
      <img class="image-lightbox__image" src="" alt="" width="" height="" loading="lazy">
      <div class="image-lightbox__navigation">
        <button type="button" class="image-lightbox__prev" data-lightbox-prev aria-label="Previous image">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="15,18 9,12 15,6"/>
          </svg>
        </button>
        <button type="button" class="image-lightbox__next" data-lightbox-next aria-label="Next image">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="9,18 15,12 9,6"/>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <script>
    class ImageGalleryLightbox {
      constructor(sectionId) { 
        this.sectionId = sectionId;
        this.lightbox = document.getElementById(`image-lightbox-${sectionId}`);
        this.lightboxImage = this.lightbox.querySelector('.image-lightbox__image');
        this.triggers = document.querySelectorAll(`[data-lightbox-trigger]`);
        this.currentIndex = 0;
        this.images = [];
        
        this.init();
      }

      init() {
        // Collect all images data
        this.triggers.forEach((trigger, index) => {
          this.images.push({
            src: trigger.dataset.imageSrc,
            alt: trigger.dataset.imageAlt
          });
          
          trigger.addEventListener('click', () => {
            this.currentIndex = index;
            this.openLightbox();
          });
        });

        // Close lightbox events
        this.lightbox.querySelectorAll('[data-lightbox-close]').forEach(closeBtn => {
          closeBtn.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            this.closeLightbox();
          });
        });

        // Navigation events
        const prevBtn = this.lightbox.querySelector('[data-lightbox-prev]');
        const nextBtn = this.lightbox.querySelector('[data-lightbox-next]');
        
        if (prevBtn) {
          prevBtn.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            this.prevImage();
          });
        }
        
        if (nextBtn) {
          nextBtn.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            this.nextImage();
          });
        }

        // Keyboard navigation
        document.addEventListener('keydown', (e) => {
          if (this.lightbox.getAttribute('aria-hidden') === 'false') {
            switch(e.key) {
              case 'Escape':
                this.closeLightbox();
                break;
              case 'ArrowLeft':
                this.prevImage();
                break;
              case 'ArrowRight':
                this.nextImage();
                break;
            }
          }
        });
      }

      openLightbox() {
        this.updateImage();
        this.lightbox.setAttribute('aria-hidden', 'false');
        document.body.style.overflow = 'hidden';
      }

      closeLightbox() {
        this.lightbox.setAttribute('aria-hidden', 'true');
        document.body.style.overflow = '';
      }

      updateImage() {
        const currentImage = this.images[this.currentIndex];
        this.lightboxImage.src = currentImage.src;
        this.lightboxImage.alt = currentImage.alt;
      }

      prevImage() {
        this.currentIndex = this.currentIndex === 0 ? this.images.length - 1 : this.currentIndex - 1;
        this.updateImage();
      }

      nextImage() {
        this.currentIndex = this.currentIndex === this.images.length - 1 ? 0 : this.currentIndex + 1;
        this.updateImage();
      }
    }

    // Initialize lightbox when DOM is ready
    document.addEventListener('DOMContentLoaded', () => {
      new ImageGalleryLightbox('{{ section.id }}');
    });
  </script>

  <style>
    .image-gallery {
      display: grid;
      grid-template-columns: repeat(var(--columns-mobile), 1fr);
      gap: 15px;
      margin-top: 30px;
    }

    @media screen and (min-width: 750px) {
      .image-gallery {
        grid-template-columns: repeat(var(--columns-desktop), 1fr);
        gap: 20px;
      }
    }

    .image-gallery__item {
      position: relative;
      overflow: hidden;
      border-radius: 8px;
      background-color: var(--color-background);
    }

    .image-gallery__button {
      position: relative;
      width: 100%;
      border: none;
      background: none;
      cursor: pointer;
      display: block;
    }

    .image-gallery__image {
      width: 100%;
      height: auto;
      object-fit: cover;
      aspect-ratio: 1;
      transition: transform 0.3s ease;
    }

    .image-gallery__button:hover .image-gallery__image {
      transform: scale(1.05);
    }

    .image-gallery__overlay {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0, 0, 0, 0.5);
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .image-gallery__button:hover .image-gallery__overlay {
      opacity: 1;
    }

    .image-gallery__zoom-icon {
      color: white;
      width: 32px;
      height: 32px;
    }

    .image-gallery__empty {
      text-align: center;
      padding: 60px 20px;
      color: var(--color-foreground-75);
    }

    /* Lightbox Styles */
    .image-lightbox {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 1000;
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0;
      visibility: hidden;
      transition: opacity 0.3s ease, visibility 0.3s ease;
    }

    .image-lightbox[aria-hidden="false"] {
      opacity: 1;
      visibility: visible;
    }

    .image-lightbox__backdrop {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.9);
      cursor: pointer;
    }

    .image-lightbox__container {
      position: relative;
      max-width: 90vw;
      max-height: 90vh;
      z-index: 1001;
    }

    .image-lightbox__image {
      max-width: 100%;
      max-height: 90vh;
      width: auto;
      height: auto;
      object-fit: contain;
    }

    .image-lightbox__close {
      position: absolute;
      top: 20px;
      right: 20px;
      background: rgba(0, 0, 0, 0.7);
      border: none;
      color: white;
      cursor: pointer;
      padding: 15px;
      border-radius: 50%;
      z-index: 1002;
      width: 50px;
      height: 50px;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: background-color 0.3s ease;
    }

    .image-lightbox__close:hover {
      background: rgba(0, 0, 0, 0.9);
    }

    .image-lightbox__close svg {
      width: 20px;
      height: 20px;
    }

    .image-lightbox__navigation {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: space-between;
      pointer-events: none;
      padding: 0 20px;
    }

    .image-lightbox__prev,
    .image-lightbox__next {
      background: rgba(0, 0, 0, 0.7);
      border: none;
      color: white;
      cursor: pointer;
      padding: 20px;
      border-radius: 50%;
      pointer-events: auto;
      transition: background-color 0.3s ease;
      width: 60px;
      height: 60px;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1002;
    }

    .image-lightbox__prev:hover,
    .image-lightbox__next:hover {
      background: rgba(0, 0, 0, 0.9);
    }

    .image-lightbox__prev svg,
    .image-lightbox__next svg {
      width: 24px;
      height: 24px;
    }

    @media screen and (max-width: 749px) {
      .image-lightbox__navigation {
        padding: 0 10px;
      }
      
      .image-lightbox__prev,
      .image-lightbox__next {
        width: 50px;
        height: 50px;
        padding: 15px;
      }
      
      .image-lightbox__prev svg,
      .image-lightbox__next svg {
        width: 20px;
        height: 20px;
      }
    }
  </style>

{%- endunless -%}

{% schema %}
{
  "name": "Image Gallery",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "page",
      "id": "page",
      "label": "Select Page",
      "info": "Choose the page that contains the gallery images metafield"
    },
    {
      "type": "inline_richtext",
      "id": "title",
      "default": "Image Gallery",
      "label": "Heading"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "Small"
        },
        {
          "value": "h1",
          "label": "Medium"
        },
        {
          "value": "h0",
          "label": "Large"
        }
      ],
      "default": "h1",
      "label": "Heading size"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 3,
      "label": "Number of columns on desktop"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "Number of columns on mobile",
      "options": [
        {
          "value": "1",
          "label": "1 column"
        },
        {
          "value": "2",
          "label": "2 columns"
        }
      ]
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "background-1"
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding bottom",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "Image Gallery"
    }
  ]
}
{% endschema %}