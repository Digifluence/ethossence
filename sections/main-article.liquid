{{ 'section-blog-post.css' | asset_url | stylesheet_tag }}

<article class="article-template">
  {%- for block in section.blocks -%}
    {%- case block.type -%}
      {%- when '@app' -%}
        <div class="page-width page-width--narrow">
          {% render block %}
        </div>
      {%- when 'featured_image' -%}
        {%- if article.image -%}
          <div
            class="article-template__hero-container{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}"
            {{ block.shopify_attributes }}
          >
            <div
              class="article-template__hero-{{ block.settings.image_height }} media"
              {% if block.settings.image_height == 'adapt' and article.image %}
                style="padding-bottom: {{ 1 | divided_by: article.image.aspect_ratio | times: 100 }}%;"
              {% endif %}
            >
              <img
                srcset="
                  {% if article.image.width >= 350 %}{{ article.image | image_url: width: 350 }} 350w,{% endif %}
                  {% if article.image.width >= 750 %}{{ article.image | image_url: width: 750 }} 750w,{% endif %}
                  {% if article.image.width >= 1100 %}{{ article.image | image_url: width: 1100 }} 1100w,{% endif %}
                  {% if article.image.width >= 1500 %}{{ article.image | image_url: width: 1500 }} 1500w,{% endif %}
                  {% if article.image.width >= 2200 %}{{ article.image | image_url: width: 2200 }} 2200w,{% endif %}
                  {% if article.image.width >= 3000 %}{{ article.image | image_url: width: 3000 }} 3000w,{% endif %}
                  {{ article.image | image_url }} {{ article.image.width }}w
                "
                sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 }}px, (min-width: 750px) calc(100vw - 10rem), 100vw"
                src="{{ article.image | image_url: width: 1100 }}"
                loading="eager"
                fetchpriority="high"
                width="{{ article.image.width }}"
                height="{{ article.image.height }}"
                alt="{{ article.image.alt | escape }}"
              >
            </div>
          </div>
        {%- endif -%}

      {%- when 'title' -%}
        <header
          class="page-width page-width--narrow{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}"
          {{ block.shopify_attributes }}
        >
          <h1
            class="article-template__title"
          >
            {{ article.title | escape }}
          </h1>
          {%- if block.settings.blog_show_date -%}
            <span class="circle-divider caption-with-letter-spacing">
              {{- article.published_at | time_tag: format: 'date' -}}
            </span>
          {%- endif -%}
          {%- if block.settings.blog_show_author -%}
            <span class="caption-with-letter-spacing">
              <span>{{ article.author }}</span>
            </span>
          {%- endif -%}
        </header>

      {%- when 'content' -%}
        <div
          class="article-template__content page-width page-width--narrow rte{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
          {{ block.shopify_attributes }}
        >

          {%- comment -%}
            ETHOSENCE - modification to support column layouts in content.
          {%- endcomment -%}

          {%- liquid
            assign content = article.content
            
            comment
              Check if content contains any column markers
            endcomment
            assign has_columns = false
            if content contains '[[ COL '
              assign has_columns = true
            endif
          -%}

          {% if has_columns %}

            {%- liquid

              comment
                Clean up <p> tags around column markers and extra whitespace
              endcomment
              assign content = content | replace: '<p>[[ COL ', '[[ COL '
              assign content = content | replace: ' ]]</p>', ' ]]'
              assign content = content | replace: ' ]]<br></p>', ' ]]'
              assign content = content | replace: '<p> </p>', ''  

              comment
                Split content by column markers
              endcomment
              assign content_sections = content | split: '[[ COL '
              
              comment
                Start output with grid wrapper
              endcomment
              assign output = '<div class="article-grid grid grid--6-col">'
              
              comment
                Track if we're in the first section and row column count
              endcomment
              assign first_section = true
              assign current_row_cols = 0
              assign errors = ''
            
              for content_section in content_sections

                if first_section
                
                    comment
                      Content before first column marker
                    endcomment
                
                    assign first_section = false
                    assign trimmed = content_section | strip
                
                  if trimmed != ''
                    assign output = output | append: '<div class="grid__item grid__item--6-col">'
                    assign output = output | append: content_section
                    assign output = output | append: '</div>'
                  endif

                else

                  comment 
                    Process column marker and content
                  endcomment
                  
                  assign parts = content_section | split: ' ]]'
                  assign col_definition = parts[0]
                
                  comment
                    Get everything after the marker
                  endcomment
                  assign parts_size = parts | size
                  assign remaining_content = ''
                  
                  for part in parts offset: 1
                    if forloop.first
                      assign remaining_content = part
                    else
                      assign remaining_content = remaining_content | append: ' ]]' | append: part
                    endif
                  endfor
                
                  comment
                    Parse column size and validate
                  endcomment
                  assign col_parts = col_definition | split: '/'
                  assign col_size_str = col_parts[0] | strip
                  assign col_size = col_size_str | times: 1
                  
                  comment
                    Validate column size
                  endcomment
                  assign is_valid = false
                  
                  if col_size_str == '1' or col_size_str == '2' or col_size_str == '3' or col_size_str == '4' or col_size_str == '5' or col_size_str == '6'
                    if col_size >= 1 and col_size <= 6
                      assign is_valid = true
                    endif
                  endif
                  
                  comment
                    Track column count for row validation
                  endcomment
                  assign new_row_total = current_row_cols | plus: col_size
                  
                  if new_row_total > 6
                    comment
                      Reset to new row
                    endcomment
                    assign current_row_cols = col_size
                  else
                    assign current_row_cols = new_row_total
                  endif
                
                  comment
                    Clean up remaining content
                  endcomment
                  assign remaining_content = remaining_content | replace: '<p></p>', ''
                
                  comment
                    Only add column if valid and has content
                  endcomment
                  assign trimmed_content = remaining_content | strip
                
                  if is_valid and trimmed_content != ''
                    assign col_class = 'grid__item grid__item--' | append: col_size | append: '-col'
                    assign output = output | append: '<div class="' | append: col_class | append: '">'
                    assign output = output | append: remaining_content
                    assign output = output | append: '</div>'
                  elsif is_valid == false
                    comment
                      Log error for invalid column size
                    endcomment
                    assign error_msg = '<div class="article-grid-error">Invalid column size: [[ COL ' | append: col_definition | append: ' ]] - must be 1-6</div>'
                    assign output = output | append: error_msg
                  endif

                endif 

              endfor      
            
              comment
                Close grid wrapper
              endcomment
              assign output = output | append: '</div>'
            
              comment
                Final cleanup of any remaining empty paragraphs
              endcomment
              assign output = output | replace: '<p></p>', ''
              assign output = output | replace: '<p> </p>', ''

            -%}
            
            <style>
              .article-grid {
                display: grid;
                grid-template-columns: repeat(6, 1fr);
                column-gap: var(--grid-gap, 2rem);
                row-gap: 0;
                margin: 2rem 0;
              }
              
              .article-grid .grid__item {
                min-width: 0; /* Prevent grid blowout */
              }
              
              /* Prevent nested grids from breaking layout */
              .article-grid .grid__item .grid__item {
                display: block;
                grid-column: auto;
              }
              
              .grid__item--1-col { grid-column: span 1; }
              .grid__item--2-col { grid-column: span 2; }
              .grid__item--3-col { grid-column: span 3; }
              .grid__item--4-col { grid-column: span 4; }
              .grid__item--5-col { grid-column: span 5; }
              .grid__item--6-col { grid-column: span 6; }
              
              /* Error styling for invalid column markers */
              .article-grid-error {
                grid-column: 1 / -1;
                padding: 1rem;
                background-color: #fff3cd;
                border: 1px solid #ffc107;
                border-radius: 4px;
                color: #856404;
                font-size: 0.875rem;
                margin: 0.5rem 0;
              }
              
              @media screen and (max-width: 749px) {
                .article-grid {
                  grid-template-columns: repeat(2, 1fr);
                }
                
                .grid__item--1-col,
                .grid__item--2-col,
                .grid__item--3-col,
                .grid__item--4-col,
                .grid__item--5-col,
                .grid__item--6-col {
                  grid-column: span 2;
                }
                
                .article-grid-error {
                  grid-column: 1 / -1;
                }
              }
            </style>            
            
            {{ output }}

          {% else %}

            {%- comment -%}No column markers found{%- endcomment -%}
            {{ content }}

          {% endif %}

        </div>

      {%- when 'share' -%}
        <div
          class="article-template__social-sharing page-width page-width--narrow{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
          {{ block.shopify_attributes }}
        >
          {% assign share_url = request.origin | append: article.url %}
          {% render 'share-button', block: block, share_link: share_url %}
        </div>
    {%- endcase -%}
  {%- endfor -%}

  <div class="article-template__back element-margin-top center{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
    <a href="{{ blog.url }}" class="article-template__link link animate-arrow">
      <span class="icon-wrap">
        <span class="svg-wrapper">
          {{- 'icon-arrow.svg' | inline_asset_content -}}
        </span>
      </span>
      {{ 'blogs.article.back_to_blog' | t: title: blog.title | escape }}
    </a>
  </div>
  {%- if blog.comments_enabled? -%}
    <div class="article-template__comment-wrapper background-secondary">
      <div
        id="comments"
        class="page-width page-width--narrow{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
      >
        {%- if article.comments_count > 0 -%}
          {%- assign anchorId = '#Comments-' | append: article.id -%}

          <h2 id="Comments-{{ article.id }}" tabindex="-1">
            {{ 'blogs.article.comments' | t: count: article.comments_count }}
          </h2>
          {% paginate article.comments by 5 %}
            <div class="article-template__comments">
              {%- if comment.status == 'pending' and comment.content -%}
                <article id="{{ comment.id }}" class="article-template__comments-comment">
                  {{ comment.content }}
                  <footer class="right">
                    <span class="circle-divider caption-with-letter-spacing">{{ comment.author }}</span>
                  </footer>
                </article>
              {%- endif -%}

              {%- for comment in article.comments -%}
                <article id="{{ comment.id }}" class="article-template__comments-comment">
                  {{ comment.content }}
                  <footer class="right">
                    <span class="circle-divider caption-with-letter-spacing">{{ comment.author }}</span
                    ><span class="caption-with-letter-spacing">
                      {{- comment.created_at | time_tag: format: 'date' -}}
                    </span>
                  </footer>
                </article>
              {%- endfor -%}
              {% render 'pagination', paginate: paginate, anchor: anchorId %}
            </div>
          {% endpaginate %}
        {%- endif -%}
        {% form 'new_comment', article %}
          {%- liquid
            assign post_message = 'blogs.article.success'
            if blog.moderated? and comment.status == 'unapproved'
              assign post_message = 'blogs.article.success_moderated'
            endif
          -%}
          <h2>{{ 'blogs.article.comment_form_title' | t }}</h2>
          {%- if form.errors -%}
            <div class="form__message" role="alert">
              <h3 class="form-status caption-large text-body" tabindex="-1" autofocus>
                <span class="svg-wrapper">
                  {{- 'icon-error.svg' | inline_asset_content -}}
                </span>
                {{ 'templates.contact.form.error_heading' | t }}
              </h3>
            </div>
            <ul class="form-status-list caption-large">
              {%- for field in form.errors -%}
                <li>
                  <a href="#CommentForm-{{ field }}" class="link">
                    {%- if form.errors.translated_fields[field] contains 'author' -%}
                      {{ 'blogs.article.name' | t }}
                    {%- elsif form.errors.translated_fields[field] contains 'body' -%}
                      {{ 'blogs.article.message' | t }}
                    {%- else -%}
                      {{ form.errors.translated_fields[field] }}
                    {%- endif -%}
                    {{ form.errors.messages[field] }}
                  </a>
                </li>
              {%- endfor -%}
            </ul>
          {%- elsif form.posted_successfully? -%}
            <div class="form-status-list form__message" role="status">
              <h3 class="form-status" tabindex="-1" autofocus>
                <span class="svg-wrapper">
                  {{- 'icon-success.svg' | inline_asset_content -}}
                </span>
                {{ post_message | t }}
              </h3>
            </div>
          {%- endif -%}

          <div
            {% if blog.moderated? == false %}
              class="article-template__comments-fields"
            {% endif %}
          >
            <div class="article-template__comment-fields">
              <div class="field field--with-error">
                <input
                  type="text"
                  name="comment[author]"
                  id="CommentForm-author"
                  class="field__input"
                  autocomplete="name"
                  value="{{ form.author }}"
                  aria-required="true"
                  required
                  {% if form.errors contains 'author' %}
                    aria-invalid="true"
                    aria-describedby="CommentForm-author-error"
                  {% endif %}
                  placeholder="{{ 'blogs.article.name' | t }}"
                >
                <label class="field__label" for="CommentForm-author">
                  {{- 'blogs.article.name' | t }}
                  <span aria-hidden="true">*</span></label
                >
                {%- if form.errors contains 'author' -%}
                  <small id="CommentForm-author-error">
                    <span class="form__message">
                      <span class="svg-wrapper">
                        {{- 'icon-error.svg' | inline_asset_content -}}
                      </span>
                      {{- 'blogs.article.name' | t }}
                      {{ form.errors.messages.author }}.</span
                    >
                  </small>
                {%- endif -%}
              </div>
              <div class="field field--with-error">
                <input
                  type="email"
                  name="comment[email]"
                  id="CommentForm-email"
                  autocomplete="email"
                  class="field__input"
                  value="{{ form.email }}"
                  autocorrect="off"
                  autocapitalize="off"
                  aria-required="true"
                  required
                  {% if form.errors contains 'email' %}
                    aria-invalid="true"
                    aria-describedby="CommentForm-email-error"
                  {% endif %}
                  placeholder="{{ 'blogs.article.email' | t }}"
                >
                <label class="field__label" for="CommentForm-email">
                  {{- 'blogs.article.email' | t }}
                  <span aria-hidden="true">*</span></label
                >
                {%- if form.errors contains 'email' -%}
                  <small id="CommentForm-email-error">
                    <span class="form__message">
                      <span class="svg-wrapper">
                        {{- 'icon-error.svg' | inline_asset_content -}}
                      </span>
                      {{- 'blogs.article.email' | t }}
                      {{ form.errors.messages.email }}.</span
                    >
                  </small>
                {%- endif -%}
              </div>
            </div>
            <div class="field field--with-error">
              <textarea
                rows="5"
                name="comment[body]"
                id="CommentForm-body"
                class="text-area field__input"
                aria-required="true"
                required
                {% if form.errors contains 'body' %}
                  aria-invalid="true"
                  aria-describedby="CommentForm-body-error"
                {% endif %}
                placeholder="{{ 'blogs.article.message' | t }}"
              >{{ form.body }}</textarea>
              <label class="form__label field__label" for="CommentForm-body">
                {{- 'blogs.article.message' | t }}
                <span aria-hidden="true">*</span></label
              >
            </div>
            {%- if form.errors contains 'body' -%}
              <small id="CommentForm-body-error">
                <span class="form__message">
                  <span class="svg-wrapper">
                    {{- 'icon-error.svg' | inline_asset_content -}}
                  </span>
                  {{- 'blogs.article.message' | t }}
                  {{ form.errors.messages.body }}.</span
                >
              </small>
            {%- endif -%}
          </div>
          {%- if blog.moderated? -%}
            <p class="article-template__comment-warning caption">{{ 'blogs.article.moderated' | t }}</p>
          {%- endif -%}
          <input type="submit" class="button" value="{{ 'blogs.article.post' | t }}">
        {% endform %}
      </div>
    </div>
  {%- endif -%}
</article>

<script type="application/ld+json">
  {{ article | structured_data }}
</script>

{% schema %}
{
  "name": "t:sections.main-article.name",
  "tag": "section",
  "class": "section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "featured_image",
      "name": "t:sections.main-article.blocks.featured_image.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "image_height",
          "options": [
            {
              "value": "adapt",
              "label": "t:sections.main-article.blocks.featured_image.settings.image_height.options__1.label"
            },
            {
              "value": "small",
              "label": "t:sections.main-article.blocks.featured_image.settings.image_height.options__2.label"
            },
            {
              "value": "medium",
              "label": "t:sections.main-article.blocks.featured_image.settings.image_height.options__3.label"
            },
            {
              "value": "large",
              "label": "t:sections.main-article.blocks.featured_image.settings.image_height.options__4.label"
            }
          ],
          "default": "adapt",
          "label": "t:sections.main-article.blocks.featured_image.settings.image_height.label"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-article.blocks.title.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "blog_show_date",
          "default": true,
          "label": "t:sections.main-article.blocks.title.settings.blog_show_date.label"
        },
        {
          "type": "checkbox",
          "id": "blog_show_author",
          "default": false,
          "label": "t:sections.main-article.blocks.title.settings.blog_show_author.label"
        }
      ]
    },
    {
      "type": "content",
      "name": "t:sections.main-article.blocks.content.name",
      "limit": 1
    },
    {
      "type": "share",
      "name": "t:sections.main-article.blocks.share.name",
      "limit": 2,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.main-article.blocks.share.settings.text.label",
          "default": "t:sections.main-article.blocks.share.settings.text.default"
        }
      ]
    }
  ]
}
{% endschema %}
