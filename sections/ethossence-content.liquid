<!-- MELTTOOLS -->

{% comment %}
{% assign display_content = [content_type].metafields.ethossence.content.value %}
item.header v. item.header_text
item.paragraph v. item.paragraph_text
{% endcomment %}

{%- if template contains 'page' -%}{% assign content_type = 'page' %}{% assign display_content = [content_type].metafields.ethossence.content.value %}
{%- elsif template contains 'blog' -%}{% assign content_type = 'blog' %}{% assign display_content = [content_type].metafields.ethossence.content.value %}
{%- elsif template contains 'article' -%}{% assign content_type = 'article' %}{% assign display_content = article.metafields.ethossence.content.value %}
{%- elsif template contains 'collection' -%}{% assign content_type = 'collection' %}{% assign display_content = [content_type].metafields.ethossence.content.value %}
{%- elsif template contains 'product' -%}{% assign content_type = 'product' %}{% assign display_content = [content_type].metafields.ethossence.content.value %}  
{%- endif -%}

{%- style -%}
  /* Section Padding - Requires Liquid variables */
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} gradient {%if section.settings.full_width %}page-width {% endif %}section-{{ section.id }}-padding">
  
  <div class="color-{{ section.settings.color_scheme }} gradient">
      <div class="extended-content-section section-{{ section.id }}-padding">
          <div class="page-width">
              <div class="grid">            

              {% for item in display_content %}     

                  {% if item.header != null %}
                      {% capture display_header %}
                          {%- liquid 
                              if item.header == 'Regular'
                                  assign set_header = "<div>"
                              else
                                  assign header_number = item.header_treat | slice: 7, 1
                                  assign set_header = header_number | prepend: "<h" | append: ">" 
                              endif 

                              assign set_class = item.header_align | downcase
                          -%}  
                          <div class="text-{{ set_class | default: 'left' }}">{{ set_header }}{{ item.header }}{{ set_header | replace: "<", "</" }}</div>
                      {% endcapture %}
                  {% endif %}      

                  {%- assign pp_text = item.paragraph | metafield_tag -%}        
                  
  
                      <div class="grid__item grid__item--{{ item.grid_cell_lg }}-12">

                          <div style="{{ item.margin_top | times: 0.125 | prepend: 'margin-top:' | append: 'em;' }}{{ item.margin_bottom | times: 0.125 | prepend: 'margin-bottom:' | append: 'em;' }}; {% if item.grid_cell_lg != 12 -%}padding: 0 1em;{% endif %}">
                      
                              {% if item.vertical_placement == 'Header => paragraph => media' or item.vertical_placement == 'Header => media => paragraph' %}           
                              {{ display_header }}
                              {% endif %}

                              {% if item.vertical_placement == 'Header => paragraph => media' or item.vertical_placement == 'Paragraph => header => media' %}  
                                  {% unless pp_text == '<div class="metafield-rich_text_field"></div>' %}
                                      <div class="text-{{ item.paragraph_align | default: 'left' | downcase }}">
                                          {% if pp_text contains 'BUTTON:' %}{{ item.paragraph | metafield_tag | replace: '<a', '<a class="button"' | remove: 'BUTTON:' }}
                                          {% else %}{{ item.paragraph | metafield_tag }}
                                          {% endif %}
                                      </div>
                                      {% if item.embed_scripts != null %}
                                          <div>{{ item.embed_scripts }}</div>
                                      {% endif %} 
                                  {% endunless %}
                              {% endif %}

                              {% if item.vertical_placement == 'Paragraph => header => media' %}               
                              {{ display_header }}
                              {% endif %}          
                              
                              {% if item.media_img_vid %}
                                  <div class="{{ item.media_align | default: 'left' | downcase | prepend: 'text-' }}">
                                      {% if item.media_img_file_magnify != null %}
                                          {%- assign s_modal = 'modalGallery_' | append: forloop.index -%}
                                          {{ item.media_img_vid.value | image_url: width: 600 | image_tag: alt: item.media_alt_txt, loading: 'lazy', data-open: s_modal, style: 'cursor: zoom-in;' }} 
                                          <div class="large reveal text-center" id="{{ s_modal }}" data-reveal>
                                              {{ item.media_img_file_magnify.value | image_url: width: 800 | image_tag }} 
                                              X
                                          </div>    
                                      {% else %}
                                          {%  if item.media_img_link_url != null %}
                                              <a href="{{ item.media_img_link_url }} " title="{{ item.media_img_link_title }}">
                                          {% endif %}
                                              {{ item.media_img_vid.value | image_url: width: 600 | image_tag: alt: item.media_alt_txt, loading: 'lazy' }}
                                          {%  if item.media_img_link_url != null %}
                                              </a>
                                          {% endif %} 
                                      {% endif %}
                                  </div>  
                              {% endif %}
                              
                              {% if item.video_platform_url != null %}
                                  <div class="{{ item.media_align | default: 'left' | downcase | prepend: 'text-' }}">
                                      {% render 'block-video' for item.video_platform_url as vid_url %}
                                  </div>
                              {% endif %}            

                              {% if item.vertical_placement == 'Media => header => paragraph' %}  
                                  {{ display_header }}
                              {% endif %}

                              {% if item.vertical_placement == 'Header => media => paragraph' or item.vertical_placement == 'Media => header => paragraph' %}  
                                  {% unless pp_text == '<div class="metafield-rich_text_field"></div>' %}
                                      <div class="text-{{ item.paragraph_align | default: 'left' | downcase }}">
                                          {% if pp_text contains 'BUTTON:' %}{{ item.paragraph | metafield_tag | replace: '<a', '<a class="button"' | remove: 'BUTTON:' }}
                                          {% else %}{{ item.paragraph | metafield_tag }}
                                          {% endif %}
                                      </div>
                                      {% if item.embed_scripts != null %}            
                                          <div>{{ item.embed_scripts }}</div>
                                      {% endif %}  
                                  {% endunless %}
                              {% endif %}

                              {%- if item.header != null -%}
                                  {%- assign display_header = '' -%}
                              {%-  endif -%}
                              
                          </div>
                      </div>
                  
              {% endfor %}        

              </div>            
          </div>
      </div>
  </div>   

</div>     

{% schema %}
{
  "name": "Extended Content",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "header",
      "content": "Appearance"
    },    
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "default": true,
      "label": "t:sections.rich-text.settings.full_width.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 52
    }
  ],
  "presets": [
    {
      "name": "Extended Content"
    }
  ]
}
{% endschema %}